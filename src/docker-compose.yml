name: loanbroker

services:
  localstack:
    image: localstack/localstack:3
    environment:
      - SERVICES=sns,sqs,iam,s3,dynamodb,lambda,cloudwatch
      - DEBUG=1
      - EDGE_PORT=4566
      - DISABLE_CORS_CHECKS=1
    ports:
      - '4566-4597:4566-4597'
      - "8000:5000"
    volumes:
      - ./lambdas:/var/lib/lambdas
      - ./localstack:/etc/localstack/init/ready.d
      - "${LOCALSTACK_VOLUME_DIR:-./volumes/localstack}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      ls:
        ipv4_address: 10.0.2.20

  loan-broker:
    build:
      context: ./
      dockerfile: ./LoanBroker/Dockerfile
    environment:
      - LOCALSTACK_URL=http://localhost.localstack.cloud:4566
      - OTLP_METRICS_URL=http://adot:5318/v1/metrics
      - OTLP_TRACING_URL=http://jaeger:4318/v1/traces
    depends_on:
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls

  bank1:
    build:
      context: ./
      dockerfile: ./Bank1Adapter/Dockerfile
    environment:
      - LOCALSTACK_URL=http://localhost.localstack.cloud:4566
      - OTLP_METRICS_URL=http://adot:5318/v1/metrics
      - OTLP_TRACING_URL=http://jaeger:4318/v1/traces
    depends_on:
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls

  bank2:
    build:
      context: ./
      dockerfile: ./Bank2Adapter/Dockerfile
    environment:
      - LOCALSTACK_URL=http://localhost.localstack.cloud:4566
      - OTLP_METRICS_URL=http://adot:5318/v1/metrics
      - OTLP_TRACING_URL=http://jaeger:4318/v1/traces
    depends_on:
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls

  bank3:
    build:
      context: ./
      dockerfile: ./Bank3Adapter/Dockerfile
    environment:
      - LOCALSTACK_URL=http://localhost.localstack.cloud:4566
      - OTLP_METRICS_URL=http://adot:5318/v1/metrics
      - OTLP_TRACING_URL=http://jaeger:4318/v1/traces
    depends_on:
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls

  client:
    build:
      context: ./
      dockerfile: ./Client/Dockerfile
    environment:
      - LOCALSTACK_URL=http://localhost.localstack.cloud:4566
      - OTLP_METRICS_URL=http://adot:5318/v1/metrics
      - OTLP_TRACING_URL=http://jaeger:4318/v1/traces
    depends_on:
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls
    tty: true
    stdin_open: true
    command: sh

  prometheus:
    image: prom/prometheus:v2.53.2
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus:/etc/prometheus
      - ./volumes/prometheus-data:/prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
    networks:
      - ls

  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - '3000:3000'
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./volumes/grafana-data:/var/lib/grafana
    networks:
      - ls

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - 16686:16686
      - 4318:4318
      - 9411:9411
      - 14250
    networks:
      - ls

  adot:
    image: amazon/aws-otel-collector
    command: [ "--config=/etc/otel-agent-config.yaml" ]
    ports:
      - "13133:13133"     # adot health_check
      - "5318:5318"       # adot
      - "1234:1234"       # adot
    volumes:
      - ./adot/config.yaml:/etc/otel-agent-config.yaml
    networks:
      - ls

  servicecontrol:
    image: particular/servicecontrol:latest
    env_file: service-platform.env
    ports:
      - "33333:33333"
    environment:
      RAVENDB_CONNECTIONSTRING: http://servicecontrol-db:8080
      REMOTEINSTANCES: '[{"api_uri":"http://servicecontrol-audit:44444/api"}]'
    command: --setup-and-run
    restart: unless-stopped
    depends_on:
      servicecontrol-db:
        condition: service_healthy
      servicecontrol-audit:
        condition: service_healthy
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls

  servicecontrol-db:
    image: particular/servicecontrol-ravendb:latest
    ports:
      - "8080:8080"
    volumes:
      - ./volumes/servicecontrol-db:/opt/RavenDB/Server/RavenData
      - ./volumes/servicecontrol-db-config:/opt/RavenDB/config
    networks:
      - ls

  servicecontrol-audit:
    image: particular/servicecontrol-audit:latest
    env_file: service-platform.env
    ports:
      - "44444:44444"
    environment:
      RAVENDB_CONNECTIONSTRING: http://servicecontrol-db:8080
    command: --setup-and-run
    restart: unless-stopped
    depends_on:
      servicecontrol-db:
        condition: service_healthy
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls

  servicecontrol-monitoring:
    image: particular/servicecontrol-monitoring:latest
    env_file: service-platform.env
    restart: unless-stopped
    environment:
      - MONITORING_SERVICECONTROLTHROUGHPUTDATAQUEUE=ServiceControl.ThroughputData
    command: --setup-and-run
    ports:
      - "33633:33633"
    depends_on:
      localstack:
        condition: service_healthy
    dns:
      - 10.0.2.20
    networks:
      - ls

  servicepulse:
    image: particular/servicepulse:latest
    ports:
      - "9999:9090"
    environment:
      SERVICECONTROL_URL: http://servicecontrol:33333
      MONITORING_URL: http://servicecontrol-monitoring:33633
    restart: unless-stopped
    depends_on:
      servicecontrol:
        condition: service_healthy
      servicecontrol-monitoring:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - ls


networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.2.0/24